version: 2.1
executors:
  frontend-excutor:
    working_directory: ~/project
    docker:
      - image: circleci/node
  backend-executor:
    working_directory: ~/project
    machine:
      image: circleci/classic:edge
jobs:
  docker-compose-cache:
    executor: backend-executor
    steps:
      - checkout
      - restore_cache:
          key: v2-docker-cache-{{ .Branch }}--{{ checksum "backend/django/requirements.txt" }}}--{{ checksum "docker-compose.yml" }}--{{ checksum "backend/django/Dockerfile" }}
      - run:
          name: docker build
          command: |
            if [ ! -f ~/caches/docker.tar ]; then
              docker-compose build
              mkdir -p ~/caches
              docker save $(docker images | awk 'NR>=2 && ! /^<none>/{print $1}') -o ~/caches/docker.tar
            fi
      - save_cache:
          key: v2-docker-cache-{{ .Branch }}--{{ checksum "backend/django/requirements.txt" }}}--{{ checksum "docker-compose.yml" }}--{{ checksum "backend/django/Dockerfile" }}
          paths:
            - ~/caches/docker.tar
  backend-test:
    executor: backend-executor
    steps:
      - checkout
      - restore_cache:
          key: v2-docker-cache-{{ .Branch }}--{{ checksum "backend/django/requirements.txt" }}}--{{ checksum "docker-compose.yml" }}--{{ checksum "backend/django/Dockerfile" }}
      - run:
          name: docker load
          command: |
            docker load -i ~/caches/docker.tar
      - run:
          name: ".env copy"
          command: docker-compose run backend cp .env.ci .env
      - run:
          name: sleep for waiting launch db
          command: sleep 10
      - run:
          name: "before_test: makemigrations"
          command: docker-compose run backend python manage.py makemigrations
      - run:
          name: "before_test: migrate"
          command: docker-compose run backend python manage.py migrate
      - run:
          name: "test pytest"
          command: docker-compose run backend pytest
      - save_cache:
          key: v2-docker-cache-{{ .Branch }}--{{ checksum "backend/django/requirements.txt" }}}--{{ checksum "docker-compose.yml" }}--{{ checksum "backend/django/Dockerfile" }}
          paths:
            - ~/caches/docker.tar
  frontend-test:
    executor: frontend-excutor
    steps:
      - checkout
      - restore_cache:
          name: Yarn cache restore
          keys:
            - v2-yarn-cache-{{ .Branch }}-{{ checksum "frontend/yarn.lock" }}
      - run:
          name: yarn install
          command: yarn install --frozen-lockfile
          working_directory: frontend
      - run:
          name: cp env
          command: cp frontend/.env.ci frontend/.env
          working_directory: frontend
      - save_cache:
          name: Save yarn cache
          key: v2-yarn-cache-{{ .Branch }}-{{ checksum "frontend/yarn.lock" }}
          paths:
            - ~/caches/yarn
      - run:
          name: yarn test
          command: yarn test
          working_directory: frontend
workflows:
  version: 2
  build-and-test:
    jobs:
      - docker-compose-cache
      - backend-test:
          requires:
            - docker-compose-cache
      - frontend-test
